package views

import (
	"fmt"
	"github.com/mbvlabs/mithlond-ce/models"
	"github.com/mbvlabs/mithlond-ce/router/routes"
)

templ UserIndex(users []models.User) {
	@base() {
		<div class="container mx-auto p-6">
			<div class="flex items-center justify-between mb-8">
				<h1 class="text-2xl font-semibold text-white">Users</h1>
				<a href={ templ.URL(routes.UserNew.Path) } class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">New User</a>
			</div>
			<div class="bg-white/5 rounded-lg border border-white/10">
				<div class="p-6">
					if len(users) == 0 {
						<p class="text-gray-400">No users found.</p>
					} else {
						<div class="overflow-x-auto">
							<table class="table w-full">
								<thead>
									<tr>
										<th class="text-white font-semibold">Created At</th>
										<th class="text-white font-semibold">Updated At</th>
										<th class="text-white font-semibold">Email</th>
										<th class="text-white font-semibold">Is Admin</th>
										<th class="text-white font-semibold">Password</th>
										<th class="text-white font-semibold">Actions</th>
									</tr>
								</thead>
								<tbody>
									for _, user := range users {
										<tr>
											<td class="text-white">{ user.CreatedAt.String() }</td>
											<td class="text-white">{ user.UpdatedAt.String() }</td>
											<td class="text-white">{ user.Email }</td>
											<td class="text-white">{ fmt.Sprintf("%d", user.IsAdmin) }</td>
											<td class="text-white">{ string(user.Password) }</td>
											<td class="flex gap-2">
												<a href={ templ.URL(routes.UserShow.GetPath(user.ID)) } class="btn btn-sm btn-primary">View</a>
												<a href={ templ.URL(routes.UserEdit.GetPath(user.ID)) } class="btn btn-sm btn-outline">Edit</a>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					}
				</div>
			</div>
		</div>
	}
}

templ UserShow(user models.User) {
	@base() {
		<div class="container mx-auto p-6">
			<div class="flex items-center justify-between mb-8">
				<h1 class="text-2xl font-semibold text-white">User Details</h1>
				<div class="flex gap-2">
					<a href={ templ.URL(routes.UserEdit.GetPath(user.ID)) } class="rounded-md bg-white/10 px-3 py-2 text-sm font-semibold text-white hover:bg-white/20 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white">Edit</a>
					<a href={ templ.URL(routes.UserIndex.Path) } class="text-sm font-semibold text-gray-400 hover:text-white">Back to List</a>
				</div>
			</div>
			<div class="bg-white/5 rounded-lg border border-white/10">
				<div class="p-6">
					<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
						<div>
							<label class="block text-sm font-medium text-white mb-1">Created At</label>
							<p class="text-lg text-gray-300">{ user.CreatedAt.String() }</p>
						</div>
						<div>
							<label class="block text-sm font-medium text-white mb-1">Updated At</label>
							<p class="text-lg text-gray-300">{ user.UpdatedAt.String() }</p>
						</div>
						<div>
							<label class="block text-sm font-medium text-white mb-1">Email</label>
							<p class="text-lg text-gray-300">{ user.Email }</p>
						</div>
						<div>
							<label class="block text-sm font-medium text-white mb-1">Is Admin</label>
							<p class="text-lg text-gray-300">{ fmt.Sprintf("%d", user.IsAdmin) }</p>
						</div>
						<div>
							<label class="block text-sm font-medium text-white mb-1">Password</label>
							<p class="text-lg text-gray-300">{ string(user.Password) }</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ UserNew() {
	@base() {
		<div class="container mx-auto p-6">
			<div class="flex items-center justify-between mb-8">
				<h1 class="text-2xl font-semibold text-white">New User</h1>
				<a href={ templ.URL(routes.UserIndex.Path) } class="text-sm font-semibold text-gray-400 hover:text-white">Back to List</a>
			</div>
			<div class="bg-white/5 rounded-lg border border-white/10">
				<div class="p-6">
					<form data-on-submit={ fmt.Sprintf("@post('%s')", routes.UserCreate.Path) }>
						<div class="space-y-6">
							<div class="border-b border-white/10 pb-6">
								<h2 class="text-base font-semibold text-white">User Information</h2>
								<p class="mt-1 text-sm text-gray-400">Enter the details for the new user.</p>
								<div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
									<div class="sm:col-span-3">
										<label for="email" class="block text-sm font-medium text-white">
											Email
										</label>
										<div class="mt-2">
											<input id="email" type="text" data-bind="email" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm"/>
										</div>
									</div>
									<div class="sm:col-span-3">
										<label for="is_admin" class="block text-sm font-medium text-white">
											Is Admin
										</label>
										<div class="mt-2">
											<input id="is_admin" type="number" data-bind="is_admin" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm"/>
										</div>
									</div>
									<div class="sm:col-span-3">
										<label for="password" class="block text-sm font-medium text-white">
											Password
										</label>
										<div class="mt-2">
											<input id="password" type="text" data-bind="password" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm"/>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="mt-6 flex items-center justify-end gap-x-6">
							<a href={ templ.URL(routes.UserIndex.Path) } class="text-sm font-semibold text-white hover:text-gray-300">Cancel</a>
							<button type="submit" class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">Create User</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	}
}

templ UserEdit(user models.User) {
	@base() {
		<div class="container mx-auto p-6">
			<div class="flex items-center justify-between mb-8">
				<h1 class="text-2xl font-semibold text-white">Edit User</h1>
				<a href={ templ.URL(routes.UserIndex.Path) } class="text-sm font-semibold text-gray-400 hover:text-white">Back to List</a>
			</div>
			<div class="bg-white/5 rounded-lg border border-white/10">
				<div class="p-6">
					<form data-on-submit={ fmt.Sprintf("@put('%s')", routes.UserUpdate.GetPath(user.ID)) }>
						<div class="space-y-6">
							<div class="border-b border-white/10 pb-6">
								<h2 class="text-base font-semibold text-white">User Information</h2>
								<p class="mt-1 text-sm text-gray-400">Update the details for this user.</p>
								<div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
									<div class="sm:col-span-3">
										<label for="email" class="block text-sm font-medium text-white">
											Email
										</label>
										<div class="mt-2">
											<input id="email" type="text" data-bind="email" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm" value={ user.Email }/>
										</div>
									</div>
									<div class="sm:col-span-3">
										<label for="is_admin" class="block text-sm font-medium text-white">
											Is Admin
										</label>
										<div class="mt-2">
											<input id="is_admin" type="number" data-bind="is_admin" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm" value={ fmt.Sprintf("%d", user.IsAdmin) }/>
										</div>
									</div>
									<div class="sm:col-span-3">
										<label for="password" class="block text-sm font-medium text-white">
											Password
										</label>
										<div class="mt-2">
											<input id="password" type="text" data-bind="password" class="block w-full rounded-md bg-white/5 px-3 py-1.5 text-base text-white outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-500 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm" value={ string(user.Password) }/>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="mt-6 flex items-center justify-end gap-x-6">
							<a href={ templ.URL(routes.UserIndex.Path) } class="text-sm font-semibold text-white hover:text-gray-300">Cancel</a>
							<button type="submit" class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">Update User</button>
						</div>
					</form>
					<div class="mt-6 pt-6 border-t border-white/10">
						<button
							data-on-click={ fmt.Sprintf("@delete('%s')", routes.UserDestroy.GetPath(user.ID)) }
							class="rounded-md bg-red-500 px-3 py-2 text-sm font-semibold text-white hover:bg-red-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-500"
						>Destroy User</button>
					</div>
				</div>
			</div>
		</div>
	}
}
